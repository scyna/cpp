// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: engine.proto

#ifndef PROTOBUF_INCLUDED_engine_2eproto
#define PROTOBUF_INCLUDED_engine_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_engine_2eproto 

namespace protobuf_engine_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_engine_2eproto
namespace scyna_proto {
class Configuration;
class ConfigurationDefaultTypeInternal;
extern ConfigurationDefaultTypeInternal _Configuration_default_instance_;
class CreateAuthRequest;
class CreateAuthRequestDefaultTypeInternal;
extern CreateAuthRequestDefaultTypeInternal _CreateAuthRequest_default_instance_;
class CreateAuthResponse;
class CreateAuthResponseDefaultTypeInternal;
extern CreateAuthResponseDefaultTypeInternal _CreateAuthResponse_default_instance_;
class CreateSessionRequest;
class CreateSessionRequestDefaultTypeInternal;
extern CreateSessionRequestDefaultTypeInternal _CreateSessionRequest_default_instance_;
class CreateSessionResponse;
class CreateSessionResponseDefaultTypeInternal;
extern CreateSessionResponseDefaultTypeInternal _CreateSessionResponse_default_instance_;
class EndSessionSignal;
class EndSessionSignalDefaultTypeInternal;
extern EndSessionSignalDefaultTypeInternal _EndSessionSignal_default_instance_;
class EndpointDoneSignal;
class EndpointDoneSignalDefaultTypeInternal;
extern EndpointDoneSignalDefaultTypeInternal _EndpointDoneSignal_default_instance_;
class GetAuthRequest;
class GetAuthRequestDefaultTypeInternal;
extern GetAuthRequestDefaultTypeInternal _GetAuthRequest_default_instance_;
class GetAuthResponse;
class GetAuthResponseDefaultTypeInternal;
extern GetAuthResponseDefaultTypeInternal _GetAuthResponse_default_instance_;
class GetIDRequest;
class GetIDRequestDefaultTypeInternal;
extern GetIDRequestDefaultTypeInternal _GetIDRequest_default_instance_;
class GetIDResponse;
class GetIDResponseDefaultTypeInternal;
extern GetIDResponseDefaultTypeInternal _GetIDResponse_default_instance_;
class GetSNRequest;
class GetSNRequestDefaultTypeInternal;
extern GetSNRequestDefaultTypeInternal _GetSNRequest_default_instance_;
class GetSNResponse;
class GetSNResponseDefaultTypeInternal;
extern GetSNResponseDefaultTypeInternal _GetSNResponse_default_instance_;
class LogCreatedSignal;
class LogCreatedSignalDefaultTypeInternal;
extern LogCreatedSignalDefaultTypeInternal _LogCreatedSignal_default_instance_;
class LogoutRequest;
class LogoutRequestDefaultTypeInternal;
extern LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;
class ReadSettingRequest;
class ReadSettingRequestDefaultTypeInternal;
extern ReadSettingRequestDefaultTypeInternal _ReadSettingRequest_default_instance_;
class ReadSettingResponse;
class ReadSettingResponseDefaultTypeInternal;
extern ReadSettingResponseDefaultTypeInternal _ReadSettingResponse_default_instance_;
class RemoveSettingRequest;
class RemoveSettingRequestDefaultTypeInternal;
extern RemoveSettingRequestDefaultTypeInternal _RemoveSettingRequest_default_instance_;
class SettingRemovedSignal;
class SettingRemovedSignalDefaultTypeInternal;
extern SettingRemovedSignalDefaultTypeInternal _SettingRemovedSignal_default_instance_;
class SettingUpdatedSignal;
class SettingUpdatedSignalDefaultTypeInternal;
extern SettingUpdatedSignalDefaultTypeInternal _SettingUpdatedSignal_default_instance_;
class TagCreatedSignal;
class TagCreatedSignalDefaultTypeInternal;
extern TagCreatedSignalDefaultTypeInternal _TagCreatedSignal_default_instance_;
class TraceCreatedSignal;
class TraceCreatedSignalDefaultTypeInternal;
extern TraceCreatedSignalDefaultTypeInternal _TraceCreatedSignal_default_instance_;
class UpdateSessionSignal;
class UpdateSessionSignalDefaultTypeInternal;
extern UpdateSessionSignalDefaultTypeInternal _UpdateSessionSignal_default_instance_;
class WriteCallSignal;
class WriteCallSignalDefaultTypeInternal;
extern WriteCallSignalDefaultTypeInternal _WriteCallSignal_default_instance_;
class WriteSettingRequest;
class WriteSettingRequestDefaultTypeInternal;
extern WriteSettingRequestDefaultTypeInternal _WriteSettingRequest_default_instance_;
}  // namespace scyna_proto
namespace google {
namespace protobuf {
template<> ::scyna_proto::Configuration* Arena::CreateMaybeMessage<::scyna_proto::Configuration>(Arena*);
template<> ::scyna_proto::CreateAuthRequest* Arena::CreateMaybeMessage<::scyna_proto::CreateAuthRequest>(Arena*);
template<> ::scyna_proto::CreateAuthResponse* Arena::CreateMaybeMessage<::scyna_proto::CreateAuthResponse>(Arena*);
template<> ::scyna_proto::CreateSessionRequest* Arena::CreateMaybeMessage<::scyna_proto::CreateSessionRequest>(Arena*);
template<> ::scyna_proto::CreateSessionResponse* Arena::CreateMaybeMessage<::scyna_proto::CreateSessionResponse>(Arena*);
template<> ::scyna_proto::EndSessionSignal* Arena::CreateMaybeMessage<::scyna_proto::EndSessionSignal>(Arena*);
template<> ::scyna_proto::EndpointDoneSignal* Arena::CreateMaybeMessage<::scyna_proto::EndpointDoneSignal>(Arena*);
template<> ::scyna_proto::GetAuthRequest* Arena::CreateMaybeMessage<::scyna_proto::GetAuthRequest>(Arena*);
template<> ::scyna_proto::GetAuthResponse* Arena::CreateMaybeMessage<::scyna_proto::GetAuthResponse>(Arena*);
template<> ::scyna_proto::GetIDRequest* Arena::CreateMaybeMessage<::scyna_proto::GetIDRequest>(Arena*);
template<> ::scyna_proto::GetIDResponse* Arena::CreateMaybeMessage<::scyna_proto::GetIDResponse>(Arena*);
template<> ::scyna_proto::GetSNRequest* Arena::CreateMaybeMessage<::scyna_proto::GetSNRequest>(Arena*);
template<> ::scyna_proto::GetSNResponse* Arena::CreateMaybeMessage<::scyna_proto::GetSNResponse>(Arena*);
template<> ::scyna_proto::LogCreatedSignal* Arena::CreateMaybeMessage<::scyna_proto::LogCreatedSignal>(Arena*);
template<> ::scyna_proto::LogoutRequest* Arena::CreateMaybeMessage<::scyna_proto::LogoutRequest>(Arena*);
template<> ::scyna_proto::ReadSettingRequest* Arena::CreateMaybeMessage<::scyna_proto::ReadSettingRequest>(Arena*);
template<> ::scyna_proto::ReadSettingResponse* Arena::CreateMaybeMessage<::scyna_proto::ReadSettingResponse>(Arena*);
template<> ::scyna_proto::RemoveSettingRequest* Arena::CreateMaybeMessage<::scyna_proto::RemoveSettingRequest>(Arena*);
template<> ::scyna_proto::SettingRemovedSignal* Arena::CreateMaybeMessage<::scyna_proto::SettingRemovedSignal>(Arena*);
template<> ::scyna_proto::SettingUpdatedSignal* Arena::CreateMaybeMessage<::scyna_proto::SettingUpdatedSignal>(Arena*);
template<> ::scyna_proto::TagCreatedSignal* Arena::CreateMaybeMessage<::scyna_proto::TagCreatedSignal>(Arena*);
template<> ::scyna_proto::TraceCreatedSignal* Arena::CreateMaybeMessage<::scyna_proto::TraceCreatedSignal>(Arena*);
template<> ::scyna_proto::UpdateSessionSignal* Arena::CreateMaybeMessage<::scyna_proto::UpdateSessionSignal>(Arena*);
template<> ::scyna_proto::WriteCallSignal* Arena::CreateMaybeMessage<::scyna_proto::WriteCallSignal>(Arena*);
template<> ::scyna_proto::WriteSettingRequest* Arena::CreateMaybeMessage<::scyna_proto::WriteSettingRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace scyna_proto {

// ===================================================================

class Configuration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.Configuration) */ {
 public:
  Configuration();
  virtual ~Configuration();

  Configuration(const Configuration& from);

  inline Configuration& operator=(const Configuration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration(Configuration&& from) noexcept
    : Configuration() {
    *this = ::std::move(from);
  }

  inline Configuration& operator=(Configuration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Configuration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration* internal_default_instance() {
    return reinterpret_cast<const Configuration*>(
               &_Configuration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Configuration* other);
  friend void swap(Configuration& a, Configuration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration* New() const final {
    return CreateMaybeMessage<Configuration>(NULL);
  }

  Configuration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Configuration>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Configuration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string NatsUrl = 1;
  void clear_natsurl();
  static const int kNatsUrlFieldNumber = 1;
  const ::std::string& natsurl() const;
  void set_natsurl(const ::std::string& value);
  #if LANG_CXX11
  void set_natsurl(::std::string&& value);
  #endif
  void set_natsurl(const char* value);
  void set_natsurl(const char* value, size_t size);
  ::std::string* mutable_natsurl();
  ::std::string* release_natsurl();
  void set_allocated_natsurl(::std::string* natsurl);

  // string NatsUsername = 2;
  void clear_natsusername();
  static const int kNatsUsernameFieldNumber = 2;
  const ::std::string& natsusername() const;
  void set_natsusername(const ::std::string& value);
  #if LANG_CXX11
  void set_natsusername(::std::string&& value);
  #endif
  void set_natsusername(const char* value);
  void set_natsusername(const char* value, size_t size);
  ::std::string* mutable_natsusername();
  ::std::string* release_natsusername();
  void set_allocated_natsusername(::std::string* natsusername);

  // string NatsPassword = 3;
  void clear_natspassword();
  static const int kNatsPasswordFieldNumber = 3;
  const ::std::string& natspassword() const;
  void set_natspassword(const ::std::string& value);
  #if LANG_CXX11
  void set_natspassword(::std::string&& value);
  #endif
  void set_natspassword(const char* value);
  void set_natspassword(const char* value, size_t size);
  ::std::string* mutable_natspassword();
  ::std::string* release_natspassword();
  void set_allocated_natspassword(::std::string* natspassword);

  // string DBHost = 4;
  void clear_dbhost();
  static const int kDBHostFieldNumber = 4;
  const ::std::string& dbhost() const;
  void set_dbhost(const ::std::string& value);
  #if LANG_CXX11
  void set_dbhost(::std::string&& value);
  #endif
  void set_dbhost(const char* value);
  void set_dbhost(const char* value, size_t size);
  ::std::string* mutable_dbhost();
  ::std::string* release_dbhost();
  void set_allocated_dbhost(::std::string* dbhost);

  // string DBUsername = 5;
  void clear_dbusername();
  static const int kDBUsernameFieldNumber = 5;
  const ::std::string& dbusername() const;
  void set_dbusername(const ::std::string& value);
  #if LANG_CXX11
  void set_dbusername(::std::string&& value);
  #endif
  void set_dbusername(const char* value);
  void set_dbusername(const char* value, size_t size);
  ::std::string* mutable_dbusername();
  ::std::string* release_dbusername();
  void set_allocated_dbusername(::std::string* dbusername);

  // string DBPassword = 6;
  void clear_dbpassword();
  static const int kDBPasswordFieldNumber = 6;
  const ::std::string& dbpassword() const;
  void set_dbpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_dbpassword(::std::string&& value);
  #endif
  void set_dbpassword(const char* value);
  void set_dbpassword(const char* value, size_t size);
  ::std::string* mutable_dbpassword();
  ::std::string* release_dbpassword();
  void set_allocated_dbpassword(::std::string* dbpassword);

  // string DBLocation = 7;
  void clear_dblocation();
  static const int kDBLocationFieldNumber = 7;
  const ::std::string& dblocation() const;
  void set_dblocation(const ::std::string& value);
  #if LANG_CXX11
  void set_dblocation(::std::string&& value);
  #endif
  void set_dblocation(const char* value);
  void set_dblocation(const char* value, size_t size);
  ::std::string* mutable_dblocation();
  ::std::string* release_dblocation();
  void set_allocated_dblocation(::std::string* dblocation);

  // @@protoc_insertion_point(class_scope:scyna_proto.Configuration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr natsurl_;
  ::google::protobuf::internal::ArenaStringPtr natsusername_;
  ::google::protobuf::internal::ArenaStringPtr natspassword_;
  ::google::protobuf::internal::ArenaStringPtr dbhost_;
  ::google::protobuf::internal::ArenaStringPtr dbusername_;
  ::google::protobuf::internal::ArenaStringPtr dbpassword_;
  ::google::protobuf::internal::ArenaStringPtr dblocation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.CreateSessionRequest) */ {
 public:
  CreateSessionRequest();
  virtual ~CreateSessionRequest();

  CreateSessionRequest(const CreateSessionRequest& from);

  inline CreateSessionRequest& operator=(const CreateSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionRequest(CreateSessionRequest&& from) noexcept
    : CreateSessionRequest() {
    *this = ::std::move(from);
  }

  inline CreateSessionRequest& operator=(CreateSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSessionRequest*>(
               &_CreateSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateSessionRequest* other);
  friend void swap(CreateSessionRequest& a, CreateSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionRequest* New() const final {
    return CreateMaybeMessage<CreateSessionRequest>(NULL);
  }

  CreateSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateSessionRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Secret = 2;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // @@protoc_insertion_point(class_scope:scyna_proto.CreateSessionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.CreateSessionResponse) */ {
 public:
  CreateSessionResponse();
  virtual ~CreateSessionResponse();

  CreateSessionResponse(const CreateSessionResponse& from);

  inline CreateSessionResponse& operator=(const CreateSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionResponse(CreateSessionResponse&& from) noexcept
    : CreateSessionResponse() {
    *this = ::std::move(from);
  }

  inline CreateSessionResponse& operator=(CreateSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSessionResponse*>(
               &_CreateSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreateSessionResponse* other);
  friend void swap(CreateSessionResponse& a, CreateSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionResponse* New() const final {
    return CreateMaybeMessage<CreateSessionResponse>(NULL);
  }

  CreateSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateSessionResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .scyna_proto.Configuration Config = 5;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 5;
  private:
  const ::scyna_proto::Configuration& _internal_config() const;
  public:
  const ::scyna_proto::Configuration& config() const;
  ::scyna_proto::Configuration* release_config();
  ::scyna_proto::Configuration* mutable_config();
  void set_allocated_config(::scyna_proto::Configuration* config);

  // uint64 SessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.CreateSessionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::scyna_proto::Configuration* config_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndSessionSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.EndSessionSignal) */ {
 public:
  EndSessionSignal();
  virtual ~EndSessionSignal();

  EndSessionSignal(const EndSessionSignal& from);

  inline EndSessionSignal& operator=(const EndSessionSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndSessionSignal(EndSessionSignal&& from) noexcept
    : EndSessionSignal() {
    *this = ::std::move(from);
  }

  inline EndSessionSignal& operator=(EndSessionSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndSessionSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndSessionSignal* internal_default_instance() {
    return reinterpret_cast<const EndSessionSignal*>(
               &_EndSessionSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(EndSessionSignal* other);
  friend void swap(EndSessionSignal& a, EndSessionSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndSessionSignal* New() const final {
    return CreateMaybeMessage<EndSessionSignal>(NULL);
  }

  EndSessionSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndSessionSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndSessionSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string Module = 3;
  void clear_module();
  static const int kModuleFieldNumber = 3;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.EndSessionSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateSessionSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.UpdateSessionSignal) */ {
 public:
  UpdateSessionSignal();
  virtual ~UpdateSessionSignal();

  UpdateSessionSignal(const UpdateSessionSignal& from);

  inline UpdateSessionSignal& operator=(const UpdateSessionSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateSessionSignal(UpdateSessionSignal&& from) noexcept
    : UpdateSessionSignal() {
    *this = ::std::move(from);
  }

  inline UpdateSessionSignal& operator=(UpdateSessionSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSessionSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSessionSignal* internal_default_instance() {
    return reinterpret_cast<const UpdateSessionSignal*>(
               &_UpdateSessionSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UpdateSessionSignal* other);
  friend void swap(UpdateSessionSignal& a, UpdateSessionSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateSessionSignal* New() const final {
    return CreateMaybeMessage<UpdateSessionSignal>(NULL);
  }

  UpdateSessionSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSessionSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSessionSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 2;
  void clear_module();
  static const int kModuleFieldNumber = 2;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.UpdateSessionSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetIDRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetIDRequest) */ {
 public:
  GetIDRequest();
  virtual ~GetIDRequest();

  GetIDRequest(const GetIDRequest& from);

  inline GetIDRequest& operator=(const GetIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetIDRequest(GetIDRequest&& from) noexcept
    : GetIDRequest() {
    *this = ::std::move(from);
  }

  inline GetIDRequest& operator=(GetIDRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIDRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetIDRequest*>(
               &_GetIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetIDRequest* other);
  friend void swap(GetIDRequest& a, GetIDRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetIDRequest* New() const final {
    return CreateMaybeMessage<GetIDRequest>(NULL);
  }

  GetIDRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetIDRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetIDRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:scyna_proto.GetIDRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetIDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetIDResponse) */ {
 public:
  GetIDResponse();
  virtual ~GetIDResponse();

  GetIDResponse(const GetIDResponse& from);

  inline GetIDResponse& operator=(const GetIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetIDResponse(GetIDResponse&& from) noexcept
    : GetIDResponse() {
    *this = ::std::move(from);
  }

  inline GetIDResponse& operator=(GetIDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetIDResponse*>(
               &_GetIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetIDResponse* other);
  friend void swap(GetIDResponse& a, GetIDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetIDResponse* New() const final {
    return CreateMaybeMessage<GetIDResponse>(NULL);
  }

  GetIDResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetIDResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetIDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  ::google::protobuf::uint64 start() const;
  void set_start(::google::protobuf::uint64 value);

  // uint64 end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  ::google::protobuf::uint64 end() const;
  void set_end(::google::protobuf::uint64 value);

  // uint32 prefix = 1;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  ::google::protobuf::uint32 prefix() const;
  void set_prefix(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.GetIDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 start_;
  ::google::protobuf::uint64 end_;
  ::google::protobuf::uint32 prefix_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSNRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetSNRequest) */ {
 public:
  GetSNRequest();
  virtual ~GetSNRequest();

  GetSNRequest(const GetSNRequest& from);

  inline GetSNRequest& operator=(const GetSNRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSNRequest(GetSNRequest&& from) noexcept
    : GetSNRequest() {
    *this = ::std::move(from);
  }

  inline GetSNRequest& operator=(GetSNRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSNRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSNRequest* internal_default_instance() {
    return reinterpret_cast<const GetSNRequest*>(
               &_GetSNRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetSNRequest* other);
  friend void swap(GetSNRequest& a, GetSNRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSNRequest* New() const final {
    return CreateMaybeMessage<GetSNRequest>(NULL);
  }

  GetSNRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSNRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSNRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:scyna_proto.GetSNRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSNResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetSNResponse) */ {
 public:
  GetSNResponse();
  virtual ~GetSNResponse();

  GetSNResponse(const GetSNResponse& from);

  inline GetSNResponse& operator=(const GetSNResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSNResponse(GetSNResponse&& from) noexcept
    : GetSNResponse() {
    *this = ::std::move(from);
  }

  inline GetSNResponse& operator=(GetSNResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSNResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSNResponse* internal_default_instance() {
    return reinterpret_cast<const GetSNResponse*>(
               &_GetSNResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetSNResponse* other);
  friend void swap(GetSNResponse& a, GetSNResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSNResponse* New() const final {
    return CreateMaybeMessage<GetSNResponse>(NULL);
  }

  GetSNResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSNResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSNResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  ::google::protobuf::uint64 start() const;
  void set_start(::google::protobuf::uint64 value);

  // uint64 end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  ::google::protobuf::uint64 end() const;
  void set_end(::google::protobuf::uint64 value);

  // uint32 prefix = 1;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  ::google::protobuf::uint32 prefix() const;
  void set_prefix(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.GetSNResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 start_;
  ::google::protobuf::uint64 end_;
  ::google::protobuf::uint32 prefix_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogCreatedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.LogCreatedSignal) */ {
 public:
  LogCreatedSignal();
  virtual ~LogCreatedSignal();

  LogCreatedSignal(const LogCreatedSignal& from);

  inline LogCreatedSignal& operator=(const LogCreatedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogCreatedSignal(LogCreatedSignal&& from) noexcept
    : LogCreatedSignal() {
    *this = ::std::move(from);
  }

  inline LogCreatedSignal& operator=(LogCreatedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogCreatedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogCreatedSignal* internal_default_instance() {
    return reinterpret_cast<const LogCreatedSignal*>(
               &_LogCreatedSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(LogCreatedSignal* other);
  friend void swap(LogCreatedSignal& a, LogCreatedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogCreatedSignal* New() const final {
    return CreateMaybeMessage<LogCreatedSignal>(NULL);
  }

  LogCreatedSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogCreatedSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogCreatedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint64 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint64 ID = 4;
  void clear_id();
  static const int kIDFieldNumber = 4;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 Level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // bool Session = 6;
  void clear_session();
  static const int kSessionFieldNumber = 6;
  bool session() const;
  void set_session(bool value);

  // uint64 SEQ = 5;
  void clear_seq();
  static const int kSEQFieldNumber = 5;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.LogCreatedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 level_;
  bool session_;
  ::google::protobuf::uint64 seq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TraceCreatedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.TraceCreatedSignal) */ {
 public:
  TraceCreatedSignal();
  virtual ~TraceCreatedSignal();

  TraceCreatedSignal(const TraceCreatedSignal& from);

  inline TraceCreatedSignal& operator=(const TraceCreatedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TraceCreatedSignal(TraceCreatedSignal&& from) noexcept
    : TraceCreatedSignal() {
    *this = ::std::move(from);
  }

  inline TraceCreatedSignal& operator=(TraceCreatedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TraceCreatedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TraceCreatedSignal* internal_default_instance() {
    return reinterpret_cast<const TraceCreatedSignal*>(
               &_TraceCreatedSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(TraceCreatedSignal* other);
  friend void swap(TraceCreatedSignal& a, TraceCreatedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TraceCreatedSignal* New() const final {
    return CreateMaybeMessage<TraceCreatedSignal>(NULL);
  }

  TraceCreatedSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TraceCreatedSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TraceCreatedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Path = 6;
  void clear_path();
  static const int kPathFieldNumber = 6;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string Source = 7;
  void clear_source();
  static const int kSourceFieldNumber = 7;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint64 ParentID = 2;
  void clear_parentid();
  static const int kParentIDFieldNumber = 2;
  ::google::protobuf::uint64 parentid() const;
  void set_parentid(::google::protobuf::uint64 value);

  // uint64 Time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint64 Duration = 5;
  void clear_duration();
  static const int kDurationFieldNumber = 5;
  ::google::protobuf::uint64 duration() const;
  void set_duration(::google::protobuf::uint64 value);

  // uint32 Type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int32 Status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // uint64 SessionID = 8;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 8;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.TraceCreatedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 parentid_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 duration_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TagCreatedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.TagCreatedSignal) */ {
 public:
  TagCreatedSignal();
  virtual ~TagCreatedSignal();

  TagCreatedSignal(const TagCreatedSignal& from);

  inline TagCreatedSignal& operator=(const TagCreatedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TagCreatedSignal(TagCreatedSignal&& from) noexcept
    : TagCreatedSignal() {
    *this = ::std::move(from);
  }

  inline TagCreatedSignal& operator=(TagCreatedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TagCreatedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TagCreatedSignal* internal_default_instance() {
    return reinterpret_cast<const TagCreatedSignal*>(
               &_TagCreatedSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(TagCreatedSignal* other);
  friend void swap(TagCreatedSignal& a, TagCreatedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TagCreatedSignal* New() const final {
    return CreateMaybeMessage<TagCreatedSignal>(NULL);
  }

  TagCreatedSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TagCreatedSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TagCreatedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string Value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 TraceID = 1;
  void clear_traceid();
  static const int kTraceIDFieldNumber = 1;
  ::google::protobuf::uint64 traceid() const;
  void set_traceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.TagCreatedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 traceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndpointDoneSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.EndpointDoneSignal) */ {
 public:
  EndpointDoneSignal();
  virtual ~EndpointDoneSignal();

  EndpointDoneSignal(const EndpointDoneSignal& from);

  inline EndpointDoneSignal& operator=(const EndpointDoneSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndpointDoneSignal(EndpointDoneSignal&& from) noexcept
    : EndpointDoneSignal() {
    *this = ::std::move(from);
  }

  inline EndpointDoneSignal& operator=(EndpointDoneSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndpointDoneSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndpointDoneSignal* internal_default_instance() {
    return reinterpret_cast<const EndpointDoneSignal*>(
               &_EndpointDoneSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(EndpointDoneSignal* other);
  friend void swap(EndpointDoneSignal& a, EndpointDoneSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndpointDoneSignal* New() const final {
    return CreateMaybeMessage<EndpointDoneSignal>(NULL);
  }

  EndpointDoneSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndpointDoneSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndpointDoneSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Response = 2;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::std::string& response() const;
  void set_response(const ::std::string& value);
  #if LANG_CXX11
  void set_response(::std::string&& value);
  #endif
  void set_response(const char* value);
  void set_response(const char* value, size_t size);
  ::std::string* mutable_response();
  ::std::string* release_response();
  void set_allocated_response(::std::string* response);

  // string Request = 3;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  const ::std::string& request() const;
  void set_request(const ::std::string& value);
  #if LANG_CXX11
  void set_request(::std::string&& value);
  #endif
  void set_request(const char* value);
  void set_request(const char* value, size_t size);
  ::std::string* mutable_request();
  ::std::string* release_request();
  void set_allocated_request(::std::string* request);

  // uint64 TraceID = 1;
  void clear_traceid();
  static const int kTraceIDFieldNumber = 1;
  ::google::protobuf::uint64 traceid() const;
  void set_traceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.EndpointDoneSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_;
  ::google::protobuf::internal::ArenaStringPtr request_;
  ::google::protobuf::uint64 traceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteSettingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.WriteSettingRequest) */ {
 public:
  WriteSettingRequest();
  virtual ~WriteSettingRequest();

  WriteSettingRequest(const WriteSettingRequest& from);

  inline WriteSettingRequest& operator=(const WriteSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteSettingRequest(WriteSettingRequest&& from) noexcept
    : WriteSettingRequest() {
    *this = ::std::move(from);
  }

  inline WriteSettingRequest& operator=(WriteSettingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSettingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteSettingRequest* internal_default_instance() {
    return reinterpret_cast<const WriteSettingRequest*>(
               &_WriteSettingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(WriteSettingRequest* other);
  friend void swap(WriteSettingRequest& a, WriteSettingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteSettingRequest* New() const final {
    return CreateMaybeMessage<WriteSettingRequest>(NULL);
  }

  WriteSettingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteSettingRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteSettingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string Value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:scyna_proto.WriteSettingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadSettingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.ReadSettingRequest) */ {
 public:
  ReadSettingRequest();
  virtual ~ReadSettingRequest();

  ReadSettingRequest(const ReadSettingRequest& from);

  inline ReadSettingRequest& operator=(const ReadSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadSettingRequest(ReadSettingRequest&& from) noexcept
    : ReadSettingRequest() {
    *this = ::std::move(from);
  }

  inline ReadSettingRequest& operator=(ReadSettingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSettingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadSettingRequest* internal_default_instance() {
    return reinterpret_cast<const ReadSettingRequest*>(
               &_ReadSettingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ReadSettingRequest* other);
  friend void swap(ReadSettingRequest& a, ReadSettingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadSettingRequest* New() const final {
    return CreateMaybeMessage<ReadSettingRequest>(NULL);
  }

  ReadSettingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadSettingRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadSettingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:scyna_proto.ReadSettingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadSettingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.ReadSettingResponse) */ {
 public:
  ReadSettingResponse();
  virtual ~ReadSettingResponse();

  ReadSettingResponse(const ReadSettingResponse& from);

  inline ReadSettingResponse& operator=(const ReadSettingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadSettingResponse(ReadSettingResponse&& from) noexcept
    : ReadSettingResponse() {
    *this = ::std::move(from);
  }

  inline ReadSettingResponse& operator=(ReadSettingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSettingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadSettingResponse* internal_default_instance() {
    return reinterpret_cast<const ReadSettingResponse*>(
               &_ReadSettingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ReadSettingResponse* other);
  friend void swap(ReadSettingResponse& a, ReadSettingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadSettingResponse* New() const final {
    return CreateMaybeMessage<ReadSettingResponse>(NULL);
  }

  ReadSettingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadSettingResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadSettingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:scyna_proto.ReadSettingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SettingUpdatedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.SettingUpdatedSignal) */ {
 public:
  SettingUpdatedSignal();
  virtual ~SettingUpdatedSignal();

  SettingUpdatedSignal(const SettingUpdatedSignal& from);

  inline SettingUpdatedSignal& operator=(const SettingUpdatedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SettingUpdatedSignal(SettingUpdatedSignal&& from) noexcept
    : SettingUpdatedSignal() {
    *this = ::std::move(from);
  }

  inline SettingUpdatedSignal& operator=(SettingUpdatedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingUpdatedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SettingUpdatedSignal* internal_default_instance() {
    return reinterpret_cast<const SettingUpdatedSignal*>(
               &_SettingUpdatedSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SettingUpdatedSignal* other);
  friend void swap(SettingUpdatedSignal& a, SettingUpdatedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SettingUpdatedSignal* New() const final {
    return CreateMaybeMessage<SettingUpdatedSignal>(NULL);
  }

  SettingUpdatedSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SettingUpdatedSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SettingUpdatedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string Value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:scyna_proto.SettingUpdatedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SettingRemovedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.SettingRemovedSignal) */ {
 public:
  SettingRemovedSignal();
  virtual ~SettingRemovedSignal();

  SettingRemovedSignal(const SettingRemovedSignal& from);

  inline SettingRemovedSignal& operator=(const SettingRemovedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SettingRemovedSignal(SettingRemovedSignal&& from) noexcept
    : SettingRemovedSignal() {
    *this = ::std::move(from);
  }

  inline SettingRemovedSignal& operator=(SettingRemovedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingRemovedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SettingRemovedSignal* internal_default_instance() {
    return reinterpret_cast<const SettingRemovedSignal*>(
               &_SettingRemovedSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SettingRemovedSignal* other);
  friend void swap(SettingRemovedSignal& a, SettingRemovedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SettingRemovedSignal* New() const final {
    return CreateMaybeMessage<SettingRemovedSignal>(NULL);
  }

  SettingRemovedSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SettingRemovedSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SettingRemovedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:scyna_proto.SettingRemovedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveSettingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.RemoveSettingRequest) */ {
 public:
  RemoveSettingRequest();
  virtual ~RemoveSettingRequest();

  RemoveSettingRequest(const RemoveSettingRequest& from);

  inline RemoveSettingRequest& operator=(const RemoveSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveSettingRequest(RemoveSettingRequest&& from) noexcept
    : RemoveSettingRequest() {
    *this = ::std::move(from);
  }

  inline RemoveSettingRequest& operator=(RemoveSettingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSettingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveSettingRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveSettingRequest*>(
               &_RemoveSettingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(RemoveSettingRequest* other);
  friend void swap(RemoveSettingRequest& a, RemoveSettingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveSettingRequest* New() const final {
    return CreateMaybeMessage<RemoveSettingRequest>(NULL);
  }

  RemoveSettingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveSettingRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveSettingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Module = 1;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::std::string& module() const;
  void set_module(const ::std::string& value);
  #if LANG_CXX11
  void set_module(::std::string&& value);
  #endif
  void set_module(const char* value);
  void set_module(const char* value, size_t size);
  ::std::string* mutable_module();
  ::std::string* release_module();
  void set_allocated_module(::std::string* module);

  // string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:scyna_proto.RemoveSettingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteCallSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.WriteCallSignal) */ {
 public:
  WriteCallSignal();
  virtual ~WriteCallSignal();

  WriteCallSignal(const WriteCallSignal& from);

  inline WriteCallSignal& operator=(const WriteCallSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteCallSignal(WriteCallSignal&& from) noexcept
    : WriteCallSignal() {
    *this = ::std::move(from);
  }

  inline WriteCallSignal& operator=(WriteCallSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteCallSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteCallSignal* internal_default_instance() {
    return reinterpret_cast<const WriteCallSignal*>(
               &_WriteCallSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(WriteCallSignal* other);
  friend void swap(WriteCallSignal& a, WriteCallSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteCallSignal* New() const final {
    return CreateMaybeMessage<WriteCallSignal>(NULL);
  }

  WriteCallSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteCallSignal>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteCallSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source = 2;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // string caller_id = 3;
  void clear_caller_id();
  static const int kCallerIdFieldNumber = 3;
  const ::std::string& caller_id() const;
  void set_caller_id(const ::std::string& value);
  #if LANG_CXX11
  void set_caller_id(::std::string&& value);
  #endif
  void set_caller_id(const char* value);
  void set_caller_id(const char* value, size_t size);
  ::std::string* mutable_caller_id();
  ::std::string* release_caller_id();
  void set_allocated_caller_id(::std::string* caller_id);

  // bytes request = 6;
  void clear_request();
  static const int kRequestFieldNumber = 6;
  const ::std::string& request() const;
  void set_request(const ::std::string& value);
  #if LANG_CXX11
  void set_request(::std::string&& value);
  #endif
  void set_request(const char* value);
  void set_request(const void* value, size_t size);
  ::std::string* mutable_request();
  ::std::string* release_request();
  void set_allocated_request(::std::string* request);

  // bytes response = 7;
  void clear_response();
  static const int kResponseFieldNumber = 7;
  const ::std::string& response() const;
  void set_response(const ::std::string& value);
  #if LANG_CXX11
  void set_response(::std::string&& value);
  #endif
  void set_response(const char* value);
  void set_response(const void* value, size_t size);
  ::std::string* mutable_response();
  ::std::string* release_response();
  void set_allocated_response(::std::string* response);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint64 session_id = 4;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 4;
  ::google::protobuf::uint64 session_id() const;
  void set_session_id(::google::protobuf::uint64 value);

  // uint32 duration = 5;
  void clear_duration();
  static const int kDurationFieldNumber = 5;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // uint32 status = 8;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // uint64 time = 9;
  void clear_time();
  static const int kTimeFieldNumber = 9;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint32 day = 10;
  void clear_day();
  static const int kDayFieldNumber = 10;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.WriteCallSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr caller_id_;
  ::google::protobuf::internal::ArenaStringPtr request_;
  ::google::protobuf::internal::ArenaStringPtr response_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAuthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.CreateAuthRequest) */ {
 public:
  CreateAuthRequest();
  virtual ~CreateAuthRequest();

  CreateAuthRequest(const CreateAuthRequest& from);

  inline CreateAuthRequest& operator=(const CreateAuthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAuthRequest(CreateAuthRequest&& from) noexcept
    : CreateAuthRequest() {
    *this = ::std::move(from);
  }

  inline CreateAuthRequest& operator=(CreateAuthRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAuthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAuthRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAuthRequest*>(
               &_CreateAuthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CreateAuthRequest* other);
  friend void swap(CreateAuthRequest& a, CreateAuthRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAuthRequest* New() const final {
    return CreateMaybeMessage<CreateAuthRequest>(NULL);
  }

  CreateAuthRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAuthRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAuthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string Apps = 2;
  int apps_size() const;
  void clear_apps();
  static const int kAppsFieldNumber = 2;
  const ::std::string& apps(int index) const;
  ::std::string* mutable_apps(int index);
  void set_apps(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_apps(int index, ::std::string&& value);
  #endif
  void set_apps(int index, const char* value);
  void set_apps(int index, const char* value, size_t size);
  ::std::string* add_apps();
  void add_apps(const ::std::string& value);
  #if LANG_CXX11
  void add_apps(::std::string&& value);
  #endif
  void add_apps(const char* value);
  void add_apps(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& apps() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_apps();

  // string UID = 1;
  void clear_uid();
  static const int kUIDFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:scyna_proto.CreateAuthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> apps_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAuthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.CreateAuthResponse) */ {
 public:
  CreateAuthResponse();
  virtual ~CreateAuthResponse();

  CreateAuthResponse(const CreateAuthResponse& from);

  inline CreateAuthResponse& operator=(const CreateAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAuthResponse(CreateAuthResponse&& from) noexcept
    : CreateAuthResponse() {
    *this = ::std::move(from);
  }

  inline CreateAuthResponse& operator=(CreateAuthResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAuthResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAuthResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAuthResponse*>(
               &_CreateAuthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CreateAuthResponse* other);
  friend void swap(CreateAuthResponse& a, CreateAuthResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAuthResponse* New() const final {
    return CreateMaybeMessage<CreateAuthResponse>(NULL);
  }

  CreateAuthResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAuthResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 Expired = 2;
  void clear_expired();
  static const int kExpiredFieldNumber = 2;
  ::google::protobuf::uint64 expired() const;
  void set_expired(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.CreateAuthResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 expired_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetAuthRequest) */ {
 public:
  GetAuthRequest();
  virtual ~GetAuthRequest();

  GetAuthRequest(const GetAuthRequest& from);

  inline GetAuthRequest& operator=(const GetAuthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAuthRequest(GetAuthRequest&& from) noexcept
    : GetAuthRequest() {
    *this = ::std::move(from);
  }

  inline GetAuthRequest& operator=(GetAuthRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAuthRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthRequest*>(
               &_GetAuthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(GetAuthRequest* other);
  friend void swap(GetAuthRequest& a, GetAuthRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAuthRequest* New() const final {
    return CreateMaybeMessage<GetAuthRequest>(NULL);
  }

  GetAuthRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAuthRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAuthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string App = 2;
  void clear_app();
  static const int kAppFieldNumber = 2;
  const ::std::string& app() const;
  void set_app(const ::std::string& value);
  #if LANG_CXX11
  void set_app(::std::string&& value);
  #endif
  void set_app(const char* value);
  void set_app(const char* value, size_t size);
  ::std::string* mutable_app();
  ::std::string* release_app();
  void set_allocated_app(::std::string* app);

  // @@protoc_insertion_point(class_scope:scyna_proto.GetAuthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr app_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.GetAuthResponse) */ {
 public:
  GetAuthResponse();
  virtual ~GetAuthResponse();

  GetAuthResponse(const GetAuthResponse& from);

  inline GetAuthResponse& operator=(const GetAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAuthResponse(GetAuthResponse&& from) noexcept
    : GetAuthResponse() {
    *this = ::std::move(from);
  }

  inline GetAuthResponse& operator=(GetAuthResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAuthResponse* internal_default_instance() {
    return reinterpret_cast<const GetAuthResponse*>(
               &_GetAuthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(GetAuthResponse* other);
  friend void swap(GetAuthResponse& a, GetAuthResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAuthResponse* New() const final {
    return CreateMaybeMessage<GetAuthResponse>(NULL);
  }

  GetAuthResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAuthResponse>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string UserID = 3;
  void clear_userid();
  static const int kUserIDFieldNumber = 3;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // uint64 Expired = 2;
  void clear_expired();
  static const int kExpiredFieldNumber = 2;
  ::google::protobuf::uint64 expired() const;
  void set_expired(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:scyna_proto.GetAuthResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 expired_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scyna_proto.LogoutRequest) */ {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutRequest(LogoutRequest&& from) noexcept
    : LogoutRequest() {
    *this = ::std::move(from);
  }

  inline LogoutRequest& operator=(LogoutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutRequest* internal_default_instance() {
    return reinterpret_cast<const LogoutRequest*>(
               &_LogoutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(LogoutRequest* other);
  friend void swap(LogoutRequest& a, LogoutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutRequest* New() const final {
    return CreateMaybeMessage<LogoutRequest>(NULL);
  }

  LogoutRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogoutRequest>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogoutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Organization = 1;
  void clear_organization();
  static const int kOrganizationFieldNumber = 1;
  const ::std::string& organization() const;
  void set_organization(const ::std::string& value);
  #if LANG_CXX11
  void set_organization(::std::string&& value);
  #endif
  void set_organization(const char* value);
  void set_organization(const char* value, size_t size);
  ::std::string* mutable_organization();
  ::std::string* release_organization();
  void set_allocated_organization(::std::string* organization);

  // string Secret = 2;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // string UserID = 3;
  void clear_userid();
  static const int kUserIDFieldNumber = 3;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string Token = 4;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:scyna_proto.LogoutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr organization_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_engine_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Configuration

// string NatsUrl = 1;
inline void Configuration::clear_natsurl() {
  natsurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::natsurl() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.NatsUrl)
  return natsurl_.GetNoArena();
}
inline void Configuration::set_natsurl(const ::std::string& value) {
  
  natsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.NatsUrl)
}
#if LANG_CXX11
inline void Configuration::set_natsurl(::std::string&& value) {
  
  natsurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.NatsUrl)
}
#endif
inline void Configuration::set_natsurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  natsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.NatsUrl)
}
inline void Configuration::set_natsurl(const char* value, size_t size) {
  
  natsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.NatsUrl)
}
inline ::std::string* Configuration::mutable_natsurl() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.NatsUrl)
  return natsurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_natsurl() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.NatsUrl)
  
  return natsurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_natsurl(::std::string* natsurl) {
  if (natsurl != NULL) {
    
  } else {
    
  }
  natsurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), natsurl);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.NatsUrl)
}

// string NatsUsername = 2;
inline void Configuration::clear_natsusername() {
  natsusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::natsusername() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.NatsUsername)
  return natsusername_.GetNoArena();
}
inline void Configuration::set_natsusername(const ::std::string& value) {
  
  natsusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.NatsUsername)
}
#if LANG_CXX11
inline void Configuration::set_natsusername(::std::string&& value) {
  
  natsusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.NatsUsername)
}
#endif
inline void Configuration::set_natsusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  natsusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.NatsUsername)
}
inline void Configuration::set_natsusername(const char* value, size_t size) {
  
  natsusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.NatsUsername)
}
inline ::std::string* Configuration::mutable_natsusername() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.NatsUsername)
  return natsusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_natsusername() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.NatsUsername)
  
  return natsusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_natsusername(::std::string* natsusername) {
  if (natsusername != NULL) {
    
  } else {
    
  }
  natsusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), natsusername);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.NatsUsername)
}

// string NatsPassword = 3;
inline void Configuration::clear_natspassword() {
  natspassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::natspassword() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.NatsPassword)
  return natspassword_.GetNoArena();
}
inline void Configuration::set_natspassword(const ::std::string& value) {
  
  natspassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.NatsPassword)
}
#if LANG_CXX11
inline void Configuration::set_natspassword(::std::string&& value) {
  
  natspassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.NatsPassword)
}
#endif
inline void Configuration::set_natspassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  natspassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.NatsPassword)
}
inline void Configuration::set_natspassword(const char* value, size_t size) {
  
  natspassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.NatsPassword)
}
inline ::std::string* Configuration::mutable_natspassword() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.NatsPassword)
  return natspassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_natspassword() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.NatsPassword)
  
  return natspassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_natspassword(::std::string* natspassword) {
  if (natspassword != NULL) {
    
  } else {
    
  }
  natspassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), natspassword);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.NatsPassword)
}

// string DBHost = 4;
inline void Configuration::clear_dbhost() {
  dbhost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::dbhost() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.DBHost)
  return dbhost_.GetNoArena();
}
inline void Configuration::set_dbhost(const ::std::string& value) {
  
  dbhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.DBHost)
}
#if LANG_CXX11
inline void Configuration::set_dbhost(::std::string&& value) {
  
  dbhost_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.DBHost)
}
#endif
inline void Configuration::set_dbhost(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dbhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.DBHost)
}
inline void Configuration::set_dbhost(const char* value, size_t size) {
  
  dbhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.DBHost)
}
inline ::std::string* Configuration::mutable_dbhost() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.DBHost)
  return dbhost_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_dbhost() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.DBHost)
  
  return dbhost_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_dbhost(::std::string* dbhost) {
  if (dbhost != NULL) {
    
  } else {
    
  }
  dbhost_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbhost);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.DBHost)
}

// string DBUsername = 5;
inline void Configuration::clear_dbusername() {
  dbusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::dbusername() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.DBUsername)
  return dbusername_.GetNoArena();
}
inline void Configuration::set_dbusername(const ::std::string& value) {
  
  dbusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.DBUsername)
}
#if LANG_CXX11
inline void Configuration::set_dbusername(::std::string&& value) {
  
  dbusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.DBUsername)
}
#endif
inline void Configuration::set_dbusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dbusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.DBUsername)
}
inline void Configuration::set_dbusername(const char* value, size_t size) {
  
  dbusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.DBUsername)
}
inline ::std::string* Configuration::mutable_dbusername() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.DBUsername)
  return dbusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_dbusername() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.DBUsername)
  
  return dbusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_dbusername(::std::string* dbusername) {
  if (dbusername != NULL) {
    
  } else {
    
  }
  dbusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbusername);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.DBUsername)
}

// string DBPassword = 6;
inline void Configuration::clear_dbpassword() {
  dbpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::dbpassword() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.DBPassword)
  return dbpassword_.GetNoArena();
}
inline void Configuration::set_dbpassword(const ::std::string& value) {
  
  dbpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.DBPassword)
}
#if LANG_CXX11
inline void Configuration::set_dbpassword(::std::string&& value) {
  
  dbpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.DBPassword)
}
#endif
inline void Configuration::set_dbpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dbpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.DBPassword)
}
inline void Configuration::set_dbpassword(const char* value, size_t size) {
  
  dbpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.DBPassword)
}
inline ::std::string* Configuration::mutable_dbpassword() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.DBPassword)
  return dbpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_dbpassword() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.DBPassword)
  
  return dbpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_dbpassword(::std::string* dbpassword) {
  if (dbpassword != NULL) {
    
  } else {
    
  }
  dbpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbpassword);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.DBPassword)
}

// string DBLocation = 7;
inline void Configuration::clear_dblocation() {
  dblocation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::dblocation() const {
  // @@protoc_insertion_point(field_get:scyna_proto.Configuration.DBLocation)
  return dblocation_.GetNoArena();
}
inline void Configuration::set_dblocation(const ::std::string& value) {
  
  dblocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.Configuration.DBLocation)
}
#if LANG_CXX11
inline void Configuration::set_dblocation(::std::string&& value) {
  
  dblocation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.Configuration.DBLocation)
}
#endif
inline void Configuration::set_dblocation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dblocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.Configuration.DBLocation)
}
inline void Configuration::set_dblocation(const char* value, size_t size) {
  
  dblocation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.Configuration.DBLocation)
}
inline ::std::string* Configuration::mutable_dblocation() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.Configuration.DBLocation)
  return dblocation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_dblocation() {
  // @@protoc_insertion_point(field_release:scyna_proto.Configuration.DBLocation)
  
  return dblocation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_dblocation(::std::string* dblocation) {
  if (dblocation != NULL) {
    
  } else {
    
  }
  dblocation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dblocation);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.Configuration.DBLocation)
}

// -------------------------------------------------------------------

// CreateSessionRequest

// string Module = 1;
inline void CreateSessionRequest::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSessionRequest::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateSessionRequest.Module)
  return module_.GetNoArena();
}
inline void CreateSessionRequest::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.CreateSessionRequest.Module)
}
#if LANG_CXX11
inline void CreateSessionRequest::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.CreateSessionRequest.Module)
}
#endif
inline void CreateSessionRequest::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.CreateSessionRequest.Module)
}
inline void CreateSessionRequest::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.CreateSessionRequest.Module)
}
inline ::std::string* CreateSessionRequest::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateSessionRequest.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSessionRequest::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.CreateSessionRequest.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionRequest::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.CreateSessionRequest.Module)
}

// string Secret = 2;
inline void CreateSessionRequest::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSessionRequest::secret() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateSessionRequest.Secret)
  return secret_.GetNoArena();
}
inline void CreateSessionRequest::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.CreateSessionRequest.Secret)
}
#if LANG_CXX11
inline void CreateSessionRequest::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.CreateSessionRequest.Secret)
}
#endif
inline void CreateSessionRequest::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.CreateSessionRequest.Secret)
}
inline void CreateSessionRequest::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.CreateSessionRequest.Secret)
}
inline ::std::string* CreateSessionRequest::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateSessionRequest.Secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSessionRequest::release_secret() {
  // @@protoc_insertion_point(field_release:scyna_proto.CreateSessionRequest.Secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionRequest::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.CreateSessionRequest.Secret)
}

// -------------------------------------------------------------------

// CreateSessionResponse

// uint64 SessionID = 1;
inline void CreateSessionResponse::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateSessionResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateSessionResponse.SessionID)
  return sessionid_;
}
inline void CreateSessionResponse::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.CreateSessionResponse.SessionID)
}

// .scyna_proto.Configuration Config = 5;
inline bool CreateSessionResponse::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void CreateSessionResponse::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::scyna_proto::Configuration& CreateSessionResponse::_internal_config() const {
  return *config_;
}
inline const ::scyna_proto::Configuration& CreateSessionResponse::config() const {
  const ::scyna_proto::Configuration* p = config_;
  // @@protoc_insertion_point(field_get:scyna_proto.CreateSessionResponse.Config)
  return p != NULL ? *p : *reinterpret_cast<const ::scyna_proto::Configuration*>(
      &::scyna_proto::_Configuration_default_instance_);
}
inline ::scyna_proto::Configuration* CreateSessionResponse::release_config() {
  // @@protoc_insertion_point(field_release:scyna_proto.CreateSessionResponse.Config)
  
  ::scyna_proto::Configuration* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::scyna_proto::Configuration* CreateSessionResponse::mutable_config() {
  
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::scyna_proto::Configuration>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateSessionResponse.Config)
  return config_;
}
inline void CreateSessionResponse::set_allocated_config(::scyna_proto::Configuration* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.CreateSessionResponse.Config)
}

// -------------------------------------------------------------------

// EndSessionSignal

// uint64 ID = 1;
inline void EndSessionSignal::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EndSessionSignal::id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndSessionSignal.ID)
  return id_;
}
inline void EndSessionSignal::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.EndSessionSignal.ID)
}

// string Code = 2;
inline void EndSessionSignal::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndSessionSignal::code() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndSessionSignal.Code)
  return code_.GetNoArena();
}
inline void EndSessionSignal::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.EndSessionSignal.Code)
}
#if LANG_CXX11
inline void EndSessionSignal::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.EndSessionSignal.Code)
}
#endif
inline void EndSessionSignal::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.EndSessionSignal.Code)
}
inline void EndSessionSignal::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.EndSessionSignal.Code)
}
inline ::std::string* EndSessionSignal::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.EndSessionSignal.Code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndSessionSignal::release_code() {
  // @@protoc_insertion_point(field_release:scyna_proto.EndSessionSignal.Code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndSessionSignal::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.EndSessionSignal.Code)
}

// string Module = 3;
inline void EndSessionSignal::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndSessionSignal::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndSessionSignal.Module)
  return module_.GetNoArena();
}
inline void EndSessionSignal::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.EndSessionSignal.Module)
}
#if LANG_CXX11
inline void EndSessionSignal::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.EndSessionSignal.Module)
}
#endif
inline void EndSessionSignal::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.EndSessionSignal.Module)
}
inline void EndSessionSignal::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.EndSessionSignal.Module)
}
inline ::std::string* EndSessionSignal::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.EndSessionSignal.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndSessionSignal::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.EndSessionSignal.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndSessionSignal::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.EndSessionSignal.Module)
}

// -------------------------------------------------------------------

// UpdateSessionSignal

// uint64 ID = 1;
inline void UpdateSessionSignal::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateSessionSignal::id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.UpdateSessionSignal.ID)
  return id_;
}
inline void UpdateSessionSignal::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.UpdateSessionSignal.ID)
}

// string Module = 2;
inline void UpdateSessionSignal::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateSessionSignal::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.UpdateSessionSignal.Module)
  return module_.GetNoArena();
}
inline void UpdateSessionSignal::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.UpdateSessionSignal.Module)
}
#if LANG_CXX11
inline void UpdateSessionSignal::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.UpdateSessionSignal.Module)
}
#endif
inline void UpdateSessionSignal::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.UpdateSessionSignal.Module)
}
inline void UpdateSessionSignal::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.UpdateSessionSignal.Module)
}
inline ::std::string* UpdateSessionSignal::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.UpdateSessionSignal.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateSessionSignal::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.UpdateSessionSignal.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSessionSignal::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.UpdateSessionSignal.Module)
}

// -------------------------------------------------------------------

// GetIDRequest

// -------------------------------------------------------------------

// GetIDResponse

// uint32 prefix = 1;
inline void GetIDResponse::clear_prefix() {
  prefix_ = 0u;
}
inline ::google::protobuf::uint32 GetIDResponse::prefix() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetIDResponse.prefix)
  return prefix_;
}
inline void GetIDResponse::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetIDResponse.prefix)
}

// uint64 start = 2;
inline void GetIDResponse::clear_start() {
  start_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetIDResponse::start() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetIDResponse.start)
  return start_;
}
inline void GetIDResponse::set_start(::google::protobuf::uint64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetIDResponse.start)
}

// uint64 end = 3;
inline void GetIDResponse::clear_end() {
  end_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetIDResponse::end() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetIDResponse.end)
  return end_;
}
inline void GetIDResponse::set_end(::google::protobuf::uint64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetIDResponse.end)
}

// -------------------------------------------------------------------

// GetSNRequest

// string key = 1;
inline void GetSNRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSNRequest::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetSNRequest.key)
  return key_.GetNoArena();
}
inline void GetSNRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.GetSNRequest.key)
}
#if LANG_CXX11
inline void GetSNRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.GetSNRequest.key)
}
#endif
inline void GetSNRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.GetSNRequest.key)
}
inline void GetSNRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.GetSNRequest.key)
}
inline ::std::string* GetSNRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.GetSNRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSNRequest::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.GetSNRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSNRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.GetSNRequest.key)
}

// -------------------------------------------------------------------

// GetSNResponse

// uint32 prefix = 1;
inline void GetSNResponse::clear_prefix() {
  prefix_ = 0u;
}
inline ::google::protobuf::uint32 GetSNResponse::prefix() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetSNResponse.prefix)
  return prefix_;
}
inline void GetSNResponse::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetSNResponse.prefix)
}

// uint64 start = 2;
inline void GetSNResponse::clear_start() {
  start_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetSNResponse::start() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetSNResponse.start)
  return start_;
}
inline void GetSNResponse::set_start(::google::protobuf::uint64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetSNResponse.start)
}

// uint64 end = 3;
inline void GetSNResponse::clear_end() {
  end_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetSNResponse::end() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetSNResponse.end)
  return end_;
}
inline void GetSNResponse::set_end(::google::protobuf::uint64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetSNResponse.end)
}

// -------------------------------------------------------------------

// LogCreatedSignal

// uint64 Time = 1;
inline void LogCreatedSignal::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogCreatedSignal::time() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.Time)
  return time_;
}
inline void LogCreatedSignal::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.Time)
}

// uint32 Level = 2;
inline void LogCreatedSignal::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 LogCreatedSignal::level() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.Level)
  return level_;
}
inline void LogCreatedSignal::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.Level)
}

// string Text = 3;
inline void LogCreatedSignal::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogCreatedSignal::text() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.Text)
  return text_.GetNoArena();
}
inline void LogCreatedSignal::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.Text)
}
#if LANG_CXX11
inline void LogCreatedSignal::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.LogCreatedSignal.Text)
}
#endif
inline void LogCreatedSignal::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.LogCreatedSignal.Text)
}
inline void LogCreatedSignal::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.LogCreatedSignal.Text)
}
inline ::std::string* LogCreatedSignal::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.LogCreatedSignal.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogCreatedSignal::release_text() {
  // @@protoc_insertion_point(field_release:scyna_proto.LogCreatedSignal.Text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogCreatedSignal::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.LogCreatedSignal.Text)
}

// uint64 ID = 4;
inline void LogCreatedSignal::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogCreatedSignal::id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.ID)
  return id_;
}
inline void LogCreatedSignal::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.ID)
}

// uint64 SEQ = 5;
inline void LogCreatedSignal::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LogCreatedSignal::seq() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.SEQ)
  return seq_;
}
inline void LogCreatedSignal::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.SEQ)
}

// bool Session = 6;
inline void LogCreatedSignal::clear_session() {
  session_ = false;
}
inline bool LogCreatedSignal::session() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogCreatedSignal.Session)
  return session_;
}
inline void LogCreatedSignal::set_session(bool value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.LogCreatedSignal.Session)
}

// -------------------------------------------------------------------

// TraceCreatedSignal

// uint64 ID = 1;
inline void TraceCreatedSignal::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TraceCreatedSignal::id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.ID)
  return id_;
}
inline void TraceCreatedSignal::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.ID)
}

// uint64 ParentID = 2;
inline void TraceCreatedSignal::clear_parentid() {
  parentid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TraceCreatedSignal::parentid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.ParentID)
  return parentid_;
}
inline void TraceCreatedSignal::set_parentid(::google::protobuf::uint64 value) {
  
  parentid_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.ParentID)
}

// uint32 Type = 3;
inline void TraceCreatedSignal::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 TraceCreatedSignal::type() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Type)
  return type_;
}
inline void TraceCreatedSignal::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Type)
}

// uint64 Time = 4;
inline void TraceCreatedSignal::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TraceCreatedSignal::time() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Time)
  return time_;
}
inline void TraceCreatedSignal::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Time)
}

// uint64 Duration = 5;
inline void TraceCreatedSignal::clear_duration() {
  duration_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TraceCreatedSignal::duration() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Duration)
  return duration_;
}
inline void TraceCreatedSignal::set_duration(::google::protobuf::uint64 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Duration)
}

// string Path = 6;
inline void TraceCreatedSignal::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TraceCreatedSignal::path() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Path)
  return path_.GetNoArena();
}
inline void TraceCreatedSignal::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Path)
}
#if LANG_CXX11
inline void TraceCreatedSignal::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.TraceCreatedSignal.Path)
}
#endif
inline void TraceCreatedSignal::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.TraceCreatedSignal.Path)
}
inline void TraceCreatedSignal::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.TraceCreatedSignal.Path)
}
inline ::std::string* TraceCreatedSignal::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.TraceCreatedSignal.Path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraceCreatedSignal::release_path() {
  // @@protoc_insertion_point(field_release:scyna_proto.TraceCreatedSignal.Path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraceCreatedSignal::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.TraceCreatedSignal.Path)
}

// string Source = 7;
inline void TraceCreatedSignal::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TraceCreatedSignal::source() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Source)
  return source_.GetNoArena();
}
inline void TraceCreatedSignal::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Source)
}
#if LANG_CXX11
inline void TraceCreatedSignal::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.TraceCreatedSignal.Source)
}
#endif
inline void TraceCreatedSignal::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.TraceCreatedSignal.Source)
}
inline void TraceCreatedSignal::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.TraceCreatedSignal.Source)
}
inline ::std::string* TraceCreatedSignal::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.TraceCreatedSignal.Source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TraceCreatedSignal::release_source() {
  // @@protoc_insertion_point(field_release:scyna_proto.TraceCreatedSignal.Source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TraceCreatedSignal::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.TraceCreatedSignal.Source)
}

// uint64 SessionID = 8;
inline void TraceCreatedSignal::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TraceCreatedSignal::sessionid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.SessionID)
  return sessionid_;
}
inline void TraceCreatedSignal::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.SessionID)
}

// int32 Status = 9;
inline void TraceCreatedSignal::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 TraceCreatedSignal::status() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TraceCreatedSignal.Status)
  return status_;
}
inline void TraceCreatedSignal::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TraceCreatedSignal.Status)
}

// -------------------------------------------------------------------

// TagCreatedSignal

// uint64 TraceID = 1;
inline void TagCreatedSignal::clear_traceid() {
  traceid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TagCreatedSignal::traceid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TagCreatedSignal.TraceID)
  return traceid_;
}
inline void TagCreatedSignal::set_traceid(::google::protobuf::uint64 value) {
  
  traceid_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.TagCreatedSignal.TraceID)
}

// string Key = 2;
inline void TagCreatedSignal::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TagCreatedSignal::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TagCreatedSignal.Key)
  return key_.GetNoArena();
}
inline void TagCreatedSignal::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.TagCreatedSignal.Key)
}
#if LANG_CXX11
inline void TagCreatedSignal::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.TagCreatedSignal.Key)
}
#endif
inline void TagCreatedSignal::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.TagCreatedSignal.Key)
}
inline void TagCreatedSignal::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.TagCreatedSignal.Key)
}
inline ::std::string* TagCreatedSignal::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.TagCreatedSignal.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TagCreatedSignal::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.TagCreatedSignal.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TagCreatedSignal::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.TagCreatedSignal.Key)
}

// string Value = 3;
inline void TagCreatedSignal::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TagCreatedSignal::value() const {
  // @@protoc_insertion_point(field_get:scyna_proto.TagCreatedSignal.Value)
  return value_.GetNoArena();
}
inline void TagCreatedSignal::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.TagCreatedSignal.Value)
}
#if LANG_CXX11
inline void TagCreatedSignal::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.TagCreatedSignal.Value)
}
#endif
inline void TagCreatedSignal::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.TagCreatedSignal.Value)
}
inline void TagCreatedSignal::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.TagCreatedSignal.Value)
}
inline ::std::string* TagCreatedSignal::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.TagCreatedSignal.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TagCreatedSignal::release_value() {
  // @@protoc_insertion_point(field_release:scyna_proto.TagCreatedSignal.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TagCreatedSignal::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.TagCreatedSignal.Value)
}

// -------------------------------------------------------------------

// EndpointDoneSignal

// uint64 TraceID = 1;
inline void EndpointDoneSignal::clear_traceid() {
  traceid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EndpointDoneSignal::traceid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndpointDoneSignal.TraceID)
  return traceid_;
}
inline void EndpointDoneSignal::set_traceid(::google::protobuf::uint64 value) {
  
  traceid_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.EndpointDoneSignal.TraceID)
}

// string Response = 2;
inline void EndpointDoneSignal::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndpointDoneSignal::response() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndpointDoneSignal.Response)
  return response_.GetNoArena();
}
inline void EndpointDoneSignal::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.EndpointDoneSignal.Response)
}
#if LANG_CXX11
inline void EndpointDoneSignal::set_response(::std::string&& value) {
  
  response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.EndpointDoneSignal.Response)
}
#endif
inline void EndpointDoneSignal::set_response(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.EndpointDoneSignal.Response)
}
inline void EndpointDoneSignal::set_response(const char* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.EndpointDoneSignal.Response)
}
inline ::std::string* EndpointDoneSignal::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.EndpointDoneSignal.Response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointDoneSignal::release_response() {
  // @@protoc_insertion_point(field_release:scyna_proto.EndpointDoneSignal.Response)
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointDoneSignal::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.EndpointDoneSignal.Response)
}

// string Request = 3;
inline void EndpointDoneSignal::clear_request() {
  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndpointDoneSignal::request() const {
  // @@protoc_insertion_point(field_get:scyna_proto.EndpointDoneSignal.Request)
  return request_.GetNoArena();
}
inline void EndpointDoneSignal::set_request(const ::std::string& value) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.EndpointDoneSignal.Request)
}
#if LANG_CXX11
inline void EndpointDoneSignal::set_request(::std::string&& value) {
  
  request_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.EndpointDoneSignal.Request)
}
#endif
inline void EndpointDoneSignal::set_request(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.EndpointDoneSignal.Request)
}
inline void EndpointDoneSignal::set_request(const char* value, size_t size) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.EndpointDoneSignal.Request)
}
inline ::std::string* EndpointDoneSignal::mutable_request() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.EndpointDoneSignal.Request)
  return request_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointDoneSignal::release_request() {
  // @@protoc_insertion_point(field_release:scyna_proto.EndpointDoneSignal.Request)
  
  return request_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointDoneSignal::set_allocated_request(::std::string* request) {
  if (request != NULL) {
    
  } else {
    
  }
  request_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.EndpointDoneSignal.Request)
}

// -------------------------------------------------------------------

// WriteSettingRequest

// string Module = 1;
inline void WriteSettingRequest::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteSettingRequest::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteSettingRequest.Module)
  return module_.GetNoArena();
}
inline void WriteSettingRequest::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteSettingRequest.Module)
}
#if LANG_CXX11
inline void WriteSettingRequest::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteSettingRequest.Module)
}
#endif
inline void WriteSettingRequest::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteSettingRequest.Module)
}
inline void WriteSettingRequest::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteSettingRequest.Module)
}
inline ::std::string* WriteSettingRequest::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteSettingRequest.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteSettingRequest::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteSettingRequest.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSettingRequest::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteSettingRequest.Module)
}

// string Key = 2;
inline void WriteSettingRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteSettingRequest::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteSettingRequest.Key)
  return key_.GetNoArena();
}
inline void WriteSettingRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteSettingRequest.Key)
}
#if LANG_CXX11
inline void WriteSettingRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteSettingRequest.Key)
}
#endif
inline void WriteSettingRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteSettingRequest.Key)
}
inline void WriteSettingRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteSettingRequest.Key)
}
inline ::std::string* WriteSettingRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteSettingRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteSettingRequest::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteSettingRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSettingRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteSettingRequest.Key)
}

// string Value = 3;
inline void WriteSettingRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteSettingRequest::value() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteSettingRequest.Value)
  return value_.GetNoArena();
}
inline void WriteSettingRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteSettingRequest.Value)
}
#if LANG_CXX11
inline void WriteSettingRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteSettingRequest.Value)
}
#endif
inline void WriteSettingRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteSettingRequest.Value)
}
inline void WriteSettingRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteSettingRequest.Value)
}
inline ::std::string* WriteSettingRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteSettingRequest.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteSettingRequest::release_value() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteSettingRequest.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteSettingRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteSettingRequest.Value)
}

// -------------------------------------------------------------------

// ReadSettingRequest

// string Module = 1;
inline void ReadSettingRequest::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadSettingRequest::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.ReadSettingRequest.Module)
  return module_.GetNoArena();
}
inline void ReadSettingRequest::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.ReadSettingRequest.Module)
}
#if LANG_CXX11
inline void ReadSettingRequest::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.ReadSettingRequest.Module)
}
#endif
inline void ReadSettingRequest::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.ReadSettingRequest.Module)
}
inline void ReadSettingRequest::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.ReadSettingRequest.Module)
}
inline ::std::string* ReadSettingRequest::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.ReadSettingRequest.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadSettingRequest::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.ReadSettingRequest.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSettingRequest::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.ReadSettingRequest.Module)
}

// string Key = 2;
inline void ReadSettingRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadSettingRequest::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.ReadSettingRequest.Key)
  return key_.GetNoArena();
}
inline void ReadSettingRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.ReadSettingRequest.Key)
}
#if LANG_CXX11
inline void ReadSettingRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.ReadSettingRequest.Key)
}
#endif
inline void ReadSettingRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.ReadSettingRequest.Key)
}
inline void ReadSettingRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.ReadSettingRequest.Key)
}
inline ::std::string* ReadSettingRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.ReadSettingRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadSettingRequest::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.ReadSettingRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSettingRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.ReadSettingRequest.Key)
}

// -------------------------------------------------------------------

// ReadSettingResponse

// string Value = 1;
inline void ReadSettingResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadSettingResponse::value() const {
  // @@protoc_insertion_point(field_get:scyna_proto.ReadSettingResponse.Value)
  return value_.GetNoArena();
}
inline void ReadSettingResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.ReadSettingResponse.Value)
}
#if LANG_CXX11
inline void ReadSettingResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.ReadSettingResponse.Value)
}
#endif
inline void ReadSettingResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.ReadSettingResponse.Value)
}
inline void ReadSettingResponse::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.ReadSettingResponse.Value)
}
inline ::std::string* ReadSettingResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.ReadSettingResponse.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadSettingResponse::release_value() {
  // @@protoc_insertion_point(field_release:scyna_proto.ReadSettingResponse.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadSettingResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.ReadSettingResponse.Value)
}

// -------------------------------------------------------------------

// SettingUpdatedSignal

// string Module = 1;
inline void SettingUpdatedSignal::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SettingUpdatedSignal::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.SettingUpdatedSignal.Module)
  return module_.GetNoArena();
}
inline void SettingUpdatedSignal::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.SettingUpdatedSignal.Module)
}
#if LANG_CXX11
inline void SettingUpdatedSignal::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.SettingUpdatedSignal.Module)
}
#endif
inline void SettingUpdatedSignal::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.SettingUpdatedSignal.Module)
}
inline void SettingUpdatedSignal::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.SettingUpdatedSignal.Module)
}
inline ::std::string* SettingUpdatedSignal::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.SettingUpdatedSignal.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettingUpdatedSignal::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.SettingUpdatedSignal.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettingUpdatedSignal::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.SettingUpdatedSignal.Module)
}

// string Key = 2;
inline void SettingUpdatedSignal::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SettingUpdatedSignal::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.SettingUpdatedSignal.Key)
  return key_.GetNoArena();
}
inline void SettingUpdatedSignal::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.SettingUpdatedSignal.Key)
}
#if LANG_CXX11
inline void SettingUpdatedSignal::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.SettingUpdatedSignal.Key)
}
#endif
inline void SettingUpdatedSignal::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.SettingUpdatedSignal.Key)
}
inline void SettingUpdatedSignal::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.SettingUpdatedSignal.Key)
}
inline ::std::string* SettingUpdatedSignal::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.SettingUpdatedSignal.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettingUpdatedSignal::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.SettingUpdatedSignal.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettingUpdatedSignal::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.SettingUpdatedSignal.Key)
}

// string Value = 3;
inline void SettingUpdatedSignal::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SettingUpdatedSignal::value() const {
  // @@protoc_insertion_point(field_get:scyna_proto.SettingUpdatedSignal.Value)
  return value_.GetNoArena();
}
inline void SettingUpdatedSignal::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.SettingUpdatedSignal.Value)
}
#if LANG_CXX11
inline void SettingUpdatedSignal::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.SettingUpdatedSignal.Value)
}
#endif
inline void SettingUpdatedSignal::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.SettingUpdatedSignal.Value)
}
inline void SettingUpdatedSignal::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.SettingUpdatedSignal.Value)
}
inline ::std::string* SettingUpdatedSignal::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.SettingUpdatedSignal.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettingUpdatedSignal::release_value() {
  // @@protoc_insertion_point(field_release:scyna_proto.SettingUpdatedSignal.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettingUpdatedSignal::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.SettingUpdatedSignal.Value)
}

// -------------------------------------------------------------------

// SettingRemovedSignal

// string Module = 1;
inline void SettingRemovedSignal::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SettingRemovedSignal::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.SettingRemovedSignal.Module)
  return module_.GetNoArena();
}
inline void SettingRemovedSignal::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.SettingRemovedSignal.Module)
}
#if LANG_CXX11
inline void SettingRemovedSignal::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.SettingRemovedSignal.Module)
}
#endif
inline void SettingRemovedSignal::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.SettingRemovedSignal.Module)
}
inline void SettingRemovedSignal::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.SettingRemovedSignal.Module)
}
inline ::std::string* SettingRemovedSignal::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.SettingRemovedSignal.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettingRemovedSignal::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.SettingRemovedSignal.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettingRemovedSignal::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.SettingRemovedSignal.Module)
}

// string Key = 2;
inline void SettingRemovedSignal::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SettingRemovedSignal::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.SettingRemovedSignal.Key)
  return key_.GetNoArena();
}
inline void SettingRemovedSignal::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.SettingRemovedSignal.Key)
}
#if LANG_CXX11
inline void SettingRemovedSignal::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.SettingRemovedSignal.Key)
}
#endif
inline void SettingRemovedSignal::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.SettingRemovedSignal.Key)
}
inline void SettingRemovedSignal::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.SettingRemovedSignal.Key)
}
inline ::std::string* SettingRemovedSignal::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.SettingRemovedSignal.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettingRemovedSignal::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.SettingRemovedSignal.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettingRemovedSignal::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.SettingRemovedSignal.Key)
}

// -------------------------------------------------------------------

// RemoveSettingRequest

// string Module = 1;
inline void RemoveSettingRequest::clear_module() {
  module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSettingRequest::module() const {
  // @@protoc_insertion_point(field_get:scyna_proto.RemoveSettingRequest.Module)
  return module_.GetNoArena();
}
inline void RemoveSettingRequest::set_module(const ::std::string& value) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.RemoveSettingRequest.Module)
}
#if LANG_CXX11
inline void RemoveSettingRequest::set_module(::std::string&& value) {
  
  module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.RemoveSettingRequest.Module)
}
#endif
inline void RemoveSettingRequest::set_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.RemoveSettingRequest.Module)
}
inline void RemoveSettingRequest::set_module(const char* value, size_t size) {
  
  module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.RemoveSettingRequest.Module)
}
inline ::std::string* RemoveSettingRequest::mutable_module() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.RemoveSettingRequest.Module)
  return module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSettingRequest::release_module() {
  // @@protoc_insertion_point(field_release:scyna_proto.RemoveSettingRequest.Module)
  
  return module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSettingRequest::set_allocated_module(::std::string* module) {
  if (module != NULL) {
    
  } else {
    
  }
  module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.RemoveSettingRequest.Module)
}

// string Key = 2;
inline void RemoveSettingRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveSettingRequest::key() const {
  // @@protoc_insertion_point(field_get:scyna_proto.RemoveSettingRequest.Key)
  return key_.GetNoArena();
}
inline void RemoveSettingRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.RemoveSettingRequest.Key)
}
#if LANG_CXX11
inline void RemoveSettingRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.RemoveSettingRequest.Key)
}
#endif
inline void RemoveSettingRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.RemoveSettingRequest.Key)
}
inline void RemoveSettingRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.RemoveSettingRequest.Key)
}
inline ::std::string* RemoveSettingRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.RemoveSettingRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveSettingRequest::release_key() {
  // @@protoc_insertion_point(field_release:scyna_proto.RemoveSettingRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveSettingRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.RemoveSettingRequest.Key)
}

// -------------------------------------------------------------------

// WriteCallSignal

// uint64 id = 1;
inline void WriteCallSignal::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteCallSignal::id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.id)
  return id_;
}
inline void WriteCallSignal::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.id)
}

// string source = 2;
inline void WriteCallSignal::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteCallSignal::source() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.source)
  return source_.GetNoArena();
}
inline void WriteCallSignal::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.source)
}
#if LANG_CXX11
inline void WriteCallSignal::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteCallSignal.source)
}
#endif
inline void WriteCallSignal::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteCallSignal.source)
}
inline void WriteCallSignal::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteCallSignal.source)
}
inline ::std::string* WriteCallSignal::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteCallSignal.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteCallSignal::release_source() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteCallSignal.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteCallSignal::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteCallSignal.source)
}

// string caller_id = 3;
inline void WriteCallSignal::clear_caller_id() {
  caller_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteCallSignal::caller_id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.caller_id)
  return caller_id_.GetNoArena();
}
inline void WriteCallSignal::set_caller_id(const ::std::string& value) {
  
  caller_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.caller_id)
}
#if LANG_CXX11
inline void WriteCallSignal::set_caller_id(::std::string&& value) {
  
  caller_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteCallSignal.caller_id)
}
#endif
inline void WriteCallSignal::set_caller_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  caller_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteCallSignal.caller_id)
}
inline void WriteCallSignal::set_caller_id(const char* value, size_t size) {
  
  caller_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteCallSignal.caller_id)
}
inline ::std::string* WriteCallSignal::mutable_caller_id() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteCallSignal.caller_id)
  return caller_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteCallSignal::release_caller_id() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteCallSignal.caller_id)
  
  return caller_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteCallSignal::set_allocated_caller_id(::std::string* caller_id) {
  if (caller_id != NULL) {
    
  } else {
    
  }
  caller_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller_id);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteCallSignal.caller_id)
}

// uint64 session_id = 4;
inline void WriteCallSignal::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteCallSignal::session_id() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.session_id)
  return session_id_;
}
inline void WriteCallSignal::set_session_id(::google::protobuf::uint64 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.session_id)
}

// uint32 duration = 5;
inline void WriteCallSignal::clear_duration() {
  duration_ = 0u;
}
inline ::google::protobuf::uint32 WriteCallSignal::duration() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.duration)
  return duration_;
}
inline void WriteCallSignal::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.duration)
}

// bytes request = 6;
inline void WriteCallSignal::clear_request() {
  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteCallSignal::request() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.request)
  return request_.GetNoArena();
}
inline void WriteCallSignal::set_request(const ::std::string& value) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.request)
}
#if LANG_CXX11
inline void WriteCallSignal::set_request(::std::string&& value) {
  
  request_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteCallSignal.request)
}
#endif
inline void WriteCallSignal::set_request(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteCallSignal.request)
}
inline void WriteCallSignal::set_request(const void* value, size_t size) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteCallSignal.request)
}
inline ::std::string* WriteCallSignal::mutable_request() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteCallSignal.request)
  return request_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteCallSignal::release_request() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteCallSignal.request)
  
  return request_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteCallSignal::set_allocated_request(::std::string* request) {
  if (request != NULL) {
    
  } else {
    
  }
  request_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteCallSignal.request)
}

// bytes response = 7;
inline void WriteCallSignal::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteCallSignal::response() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.response)
  return response_.GetNoArena();
}
inline void WriteCallSignal::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.response)
}
#if LANG_CXX11
inline void WriteCallSignal::set_response(::std::string&& value) {
  
  response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.WriteCallSignal.response)
}
#endif
inline void WriteCallSignal::set_response(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.WriteCallSignal.response)
}
inline void WriteCallSignal::set_response(const void* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.WriteCallSignal.response)
}
inline ::std::string* WriteCallSignal::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.WriteCallSignal.response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteCallSignal::release_response() {
  // @@protoc_insertion_point(field_release:scyna_proto.WriteCallSignal.response)
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteCallSignal::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.WriteCallSignal.response)
}

// uint32 status = 8;
inline void WriteCallSignal::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 WriteCallSignal::status() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.status)
  return status_;
}
inline void WriteCallSignal::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.status)
}

// uint64 time = 9;
inline void WriteCallSignal::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteCallSignal::time() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.time)
  return time_;
}
inline void WriteCallSignal::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.time)
}

// uint32 day = 10;
inline void WriteCallSignal::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 WriteCallSignal::day() const {
  // @@protoc_insertion_point(field_get:scyna_proto.WriteCallSignal.day)
  return day_;
}
inline void WriteCallSignal::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.WriteCallSignal.day)
}

// -------------------------------------------------------------------

// CreateAuthRequest

// string UID = 1;
inline void CreateAuthRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAuthRequest::uid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateAuthRequest.UID)
  return uid_.GetNoArena();
}
inline void CreateAuthRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.CreateAuthRequest.UID)
}
#if LANG_CXX11
inline void CreateAuthRequest::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.CreateAuthRequest.UID)
}
#endif
inline void CreateAuthRequest::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.CreateAuthRequest.UID)
}
inline void CreateAuthRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.CreateAuthRequest.UID)
}
inline ::std::string* CreateAuthRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateAuthRequest.UID)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAuthRequest::release_uid() {
  // @@protoc_insertion_point(field_release:scyna_proto.CreateAuthRequest.UID)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAuthRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.CreateAuthRequest.UID)
}

// repeated string Apps = 2;
inline int CreateAuthRequest::apps_size() const {
  return apps_.size();
}
inline void CreateAuthRequest::clear_apps() {
  apps_.Clear();
}
inline const ::std::string& CreateAuthRequest::apps(int index) const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateAuthRequest.Apps)
  return apps_.Get(index);
}
inline ::std::string* CreateAuthRequest::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateAuthRequest.Apps)
  return apps_.Mutable(index);
}
inline void CreateAuthRequest::set_apps(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:scyna_proto.CreateAuthRequest.Apps)
  apps_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CreateAuthRequest::set_apps(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:scyna_proto.CreateAuthRequest.Apps)
  apps_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CreateAuthRequest::set_apps(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  apps_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:scyna_proto.CreateAuthRequest.Apps)
}
inline void CreateAuthRequest::set_apps(int index, const char* value, size_t size) {
  apps_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.CreateAuthRequest.Apps)
}
inline ::std::string* CreateAuthRequest::add_apps() {
  // @@protoc_insertion_point(field_add_mutable:scyna_proto.CreateAuthRequest.Apps)
  return apps_.Add();
}
inline void CreateAuthRequest::add_apps(const ::std::string& value) {
  apps_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:scyna_proto.CreateAuthRequest.Apps)
}
#if LANG_CXX11
inline void CreateAuthRequest::add_apps(::std::string&& value) {
  apps_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:scyna_proto.CreateAuthRequest.Apps)
}
#endif
inline void CreateAuthRequest::add_apps(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  apps_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:scyna_proto.CreateAuthRequest.Apps)
}
inline void CreateAuthRequest::add_apps(const char* value, size_t size) {
  apps_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:scyna_proto.CreateAuthRequest.Apps)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateAuthRequest::apps() const {
  // @@protoc_insertion_point(field_list:scyna_proto.CreateAuthRequest.Apps)
  return apps_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateAuthRequest::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:scyna_proto.CreateAuthRequest.Apps)
  return &apps_;
}

// -------------------------------------------------------------------

// CreateAuthResponse

// string Token = 1;
inline void CreateAuthResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAuthResponse::token() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateAuthResponse.Token)
  return token_.GetNoArena();
}
inline void CreateAuthResponse::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.CreateAuthResponse.Token)
}
#if LANG_CXX11
inline void CreateAuthResponse::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.CreateAuthResponse.Token)
}
#endif
inline void CreateAuthResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.CreateAuthResponse.Token)
}
inline void CreateAuthResponse::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.CreateAuthResponse.Token)
}
inline ::std::string* CreateAuthResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.CreateAuthResponse.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAuthResponse::release_token() {
  // @@protoc_insertion_point(field_release:scyna_proto.CreateAuthResponse.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAuthResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.CreateAuthResponse.Token)
}

// uint64 Expired = 2;
inline void CreateAuthResponse::clear_expired() {
  expired_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateAuthResponse::expired() const {
  // @@protoc_insertion_point(field_get:scyna_proto.CreateAuthResponse.Expired)
  return expired_;
}
inline void CreateAuthResponse::set_expired(::google::protobuf::uint64 value) {
  
  expired_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.CreateAuthResponse.Expired)
}

// -------------------------------------------------------------------

// GetAuthRequest

// string Token = 1;
inline void GetAuthRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAuthRequest::token() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetAuthRequest.Token)
  return token_.GetNoArena();
}
inline void GetAuthRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.GetAuthRequest.Token)
}
#if LANG_CXX11
inline void GetAuthRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.GetAuthRequest.Token)
}
#endif
inline void GetAuthRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.GetAuthRequest.Token)
}
inline void GetAuthRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.GetAuthRequest.Token)
}
inline ::std::string* GetAuthRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.GetAuthRequest.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthRequest::release_token() {
  // @@protoc_insertion_point(field_release:scyna_proto.GetAuthRequest.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.GetAuthRequest.Token)
}

// string App = 2;
inline void GetAuthRequest::clear_app() {
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAuthRequest::app() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetAuthRequest.App)
  return app_.GetNoArena();
}
inline void GetAuthRequest::set_app(const ::std::string& value) {
  
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.GetAuthRequest.App)
}
#if LANG_CXX11
inline void GetAuthRequest::set_app(::std::string&& value) {
  
  app_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.GetAuthRequest.App)
}
#endif
inline void GetAuthRequest::set_app(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.GetAuthRequest.App)
}
inline void GetAuthRequest::set_app(const char* value, size_t size) {
  
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.GetAuthRequest.App)
}
inline ::std::string* GetAuthRequest::mutable_app() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.GetAuthRequest.App)
  return app_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthRequest::release_app() {
  // @@protoc_insertion_point(field_release:scyna_proto.GetAuthRequest.App)
  
  return app_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthRequest::set_allocated_app(::std::string* app) {
  if (app != NULL) {
    
  } else {
    
  }
  app_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.GetAuthRequest.App)
}

// -------------------------------------------------------------------

// GetAuthResponse

// string Token = 1;
inline void GetAuthResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAuthResponse::token() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetAuthResponse.Token)
  return token_.GetNoArena();
}
inline void GetAuthResponse::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.GetAuthResponse.Token)
}
#if LANG_CXX11
inline void GetAuthResponse::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.GetAuthResponse.Token)
}
#endif
inline void GetAuthResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.GetAuthResponse.Token)
}
inline void GetAuthResponse::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.GetAuthResponse.Token)
}
inline ::std::string* GetAuthResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.GetAuthResponse.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthResponse::release_token() {
  // @@protoc_insertion_point(field_release:scyna_proto.GetAuthResponse.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.GetAuthResponse.Token)
}

// uint64 Expired = 2;
inline void GetAuthResponse::clear_expired() {
  expired_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetAuthResponse::expired() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetAuthResponse.Expired)
  return expired_;
}
inline void GetAuthResponse::set_expired(::google::protobuf::uint64 value) {
  
  expired_ = value;
  // @@protoc_insertion_point(field_set:scyna_proto.GetAuthResponse.Expired)
}

// string UserID = 3;
inline void GetAuthResponse::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAuthResponse::userid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.GetAuthResponse.UserID)
  return userid_.GetNoArena();
}
inline void GetAuthResponse::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.GetAuthResponse.UserID)
}
#if LANG_CXX11
inline void GetAuthResponse::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.GetAuthResponse.UserID)
}
#endif
inline void GetAuthResponse::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.GetAuthResponse.UserID)
}
inline void GetAuthResponse::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.GetAuthResponse.UserID)
}
inline ::std::string* GetAuthResponse::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.GetAuthResponse.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthResponse::release_userid() {
  // @@protoc_insertion_point(field_release:scyna_proto.GetAuthResponse.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthResponse::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.GetAuthResponse.UserID)
}

// -------------------------------------------------------------------

// LogoutRequest

// string Organization = 1;
inline void LogoutRequest::clear_organization() {
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::organization() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogoutRequest.Organization)
  return organization_.GetNoArena();
}
inline void LogoutRequest::set_organization(const ::std::string& value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.LogoutRequest.Organization)
}
#if LANG_CXX11
inline void LogoutRequest::set_organization(::std::string&& value) {
  
  organization_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.LogoutRequest.Organization)
}
#endif
inline void LogoutRequest::set_organization(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.LogoutRequest.Organization)
}
inline void LogoutRequest::set_organization(const char* value, size_t size) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.LogoutRequest.Organization)
}
inline ::std::string* LogoutRequest::mutable_organization() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.LogoutRequest.Organization)
  return organization_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_organization() {
  // @@protoc_insertion_point(field_release:scyna_proto.LogoutRequest.Organization)
  
  return organization_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_organization(::std::string* organization) {
  if (organization != NULL) {
    
  } else {
    
  }
  organization_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organization);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.LogoutRequest.Organization)
}

// string Secret = 2;
inline void LogoutRequest::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::secret() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogoutRequest.Secret)
  return secret_.GetNoArena();
}
inline void LogoutRequest::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.LogoutRequest.Secret)
}
#if LANG_CXX11
inline void LogoutRequest::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.LogoutRequest.Secret)
}
#endif
inline void LogoutRequest::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.LogoutRequest.Secret)
}
inline void LogoutRequest::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.LogoutRequest.Secret)
}
inline ::std::string* LogoutRequest::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.LogoutRequest.Secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_secret() {
  // @@protoc_insertion_point(field_release:scyna_proto.LogoutRequest.Secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.LogoutRequest.Secret)
}

// string UserID = 3;
inline void LogoutRequest::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::userid() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogoutRequest.UserID)
  return userid_.GetNoArena();
}
inline void LogoutRequest::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.LogoutRequest.UserID)
}
#if LANG_CXX11
inline void LogoutRequest::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.LogoutRequest.UserID)
}
#endif
inline void LogoutRequest::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.LogoutRequest.UserID)
}
inline void LogoutRequest::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.LogoutRequest.UserID)
}
inline ::std::string* LogoutRequest::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.LogoutRequest.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_userid() {
  // @@protoc_insertion_point(field_release:scyna_proto.LogoutRequest.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.LogoutRequest.UserID)
}

// string Token = 4;
inline void LogoutRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::token() const {
  // @@protoc_insertion_point(field_get:scyna_proto.LogoutRequest.Token)
  return token_.GetNoArena();
}
inline void LogoutRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scyna_proto.LogoutRequest.Token)
}
#if LANG_CXX11
inline void LogoutRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scyna_proto.LogoutRequest.Token)
}
#endif
inline void LogoutRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scyna_proto.LogoutRequest.Token)
}
inline void LogoutRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scyna_proto.LogoutRequest.Token)
}
inline ::std::string* LogoutRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:scyna_proto.LogoutRequest.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_token() {
  // @@protoc_insertion_point(field_release:scyna_proto.LogoutRequest.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:scyna_proto.LogoutRequest.Token)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace scyna_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_engine_2eproto
